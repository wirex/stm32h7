### 요구사항 : 

1. ADC 로 배터리 전압, 전류를 측정하는 함수를 구현
ADC 작동모드 - MCU 가 지원 하는 경우 차동 모드 로 구성
ADC 정밀도 요구 사항 - 프로세서가 허용하는 최대 정밀도로 설정
ADC 속도 요구 사항 - 최대 정밀도에서 지원하는 최대 샘플링 속도 로 구성

2. SPI FLASH(WINBOND W25Q16JV 또는 동등 제품 사용)에 다음 데이터를 주기적으로 기록하는 펌웨어를 구현

요구 사항:
•  매 10초마다
   •  현재시간(RTC 기준)
   •  현재전압측정값(V)
   •  현재전류측정값〔mA)
   •  현재 전력 계산값(mW)
•  매 1분마다
   •  지난1분간평균 전압(V)
   •  지난1분간평군전류(mA)
   •  지난1분간평균 전력(mW)
단，MCU 전원 차단 후 재시작되었클 때 전원 차단 전 마지막 기록 블록 다음에 이어서 기록하고 끝에 도달하면 처음 부분부터 오버라이트
구현 시 고려사항:
•  플래시 메모리의 수명을 고려한 효물적인 쓰기 방식
•  정전 시에도 데이터가 보존되는 안전한 저장 방식
•  메모리 공간을 효물적으로 활용하는 데이터 구조

3. UART 통신을 통해 사용자가 입력한 날파/시간 정보를 수신하여 MCU의 RTC 모듈에 설정하는 시스템을 구현

 구현 시 고려사항:
- 입력 형식 정의
   날짜/시간 입력을 위한 명확한 포맷 정의〔예: "YYYY-MM-DD HH:MM” 또는 "SET_TIME YYYY/MM/DD HH:MM”)
- UART 통신설정
   •  통신버퍼크기및 오버플로우 처리방안
   •  통신 속도에 따른 Error Rate 대응 방안
- 입력데이터검증
   •  월별 일수 검증 （2월 28/29일，30일/31일 월 고려）
   •  윤년처리 로직
- RTC 설정
   •  RTC 모듈초기화 및 레지스터접근 방법
   •  검증된 날짜 /시간 정보를 RTC 레지스터에 설정하는 함수

4. UART를 통해 사용자가 요구하면，SPI Flash에 있는 내용클 분석해 배터리 사용상태를 출력하는 기능을 구현 

구현 시 고려사항:
•  UART 통신 프로토콜
   •  통신 오류처리메커니즘
•  메모리접근최적화
   •  순차적/비순차적 접근 방식 결정
•  대용량 데이터 처리를 위한 버퍼링 전략
   •  순차적/비순차적 접근 방식 결정
   •  데이터무결성확인메커니즘
• 출력 형식
   •  단위 표시 （Wh，V, W 등）
   •  시간 정보 포함〔언제부터 언제까지의 데이터인지）
•  처리효물성
   •  실시간응답보장들위한전략
   •  MC니 리소스사용최소화
•  오류처리:
   •  SPI Flash 데이터손상시대응 방안
   •  불완전한데이터 세트에대한처리 방법

5. 임의의 GPIO 편에 연결된 버튼클 이용하여 메모리 데이터 기록을 초기화하고 SPI Flash를 완전히 초기화하는 시스템을 구현 

구현 시 고려사항 :
•  GPIO 설정
   •  Internal Pull-up
   •  Open drain
•  GPIO 인터럽트처리
   •  버튼 입력 감지를 위한 인터럽트설정
   •  디바운싱구현
•  버튼입력 구분 기능
   •  짧은 누름과 긴 누름을 구분하는 타이머 메커니즘
•  메모리초기화 기능
   •  데이터 로그 초기화 루틴 （기록 포인터 재설정）
   •  메모리 상태 플래그관리
•  NAND 초기화 기능
   •  전체 SPI Flash 지우기 명령 시퀀스
   •  초기화상태확인메커니즘
•  안전기능
   * 초기화 작업 중 전원 차단에 대비한 안전장치
   * 실수로 인한 데이터 손실 방지를 위한 확인 메커니즘
•  사용자 피드백
   •  작업 진행 상태를 표시하는 방법 （LED 표시등 등）

### 요구사항 요약
1. **GPIO 설정**:
   - 버튼: 내부 풀업 저항, 오픈 드레인 출력.
   - LED: 작업 상태 표시용 (예: PC13).
2. **GPIO 인터럽트 처리**:
   - 버튼 입력 감지: EXTI 인터럽트.
   - 디바운싱: 소프트웨어 타이머로 50ms 디바운싱.
3. **버튼 입력 구분**:
   - 짧은 누름(< 2초): 데이터 기록 포인터 초기화.
   - 긴 누름(≥ 2초): 전체 SPI 플래시 초기화.
4. **메모리 초기화 기능**:
   - 데이터 로그 초기화: 메타데이터의 `last_write_addr`를 초기화.
   - 상태 플래그: 초기화 완료 여부 기록.
5. **NAND(SPI 플래시) 초기화 기능**:
   - 전체 플래시 지우기: W25Q128의 칩 지우기 명령(0x60 또는 0xC7).
   - 초기화 확인: 상태 레지스터 확인.
6. **안전 기능**:
    - 전원 차단 대비: 초기화 중 플래시 쓰기 완료 후 확인.
   - 실수 방지: 긴 누름에만 전체 초기화, 짧은 누름은 데이터 포인터만 초기화.
7. **사용자 피드백**:
   - LED: 초기화 진행/완료 시 점멸 패턴 (예: 진행 중 빠른 점멸, 완료 시 느린 점멸).



